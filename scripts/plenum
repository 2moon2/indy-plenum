#! /usr/bin/env python3
"""
Convenience script for calling the plenum command line interface (CLI). For now,
the CLI is designed for experimenting with the Plenum Byzantine Fault Tolerant
Protocol, and not for creating a live consensus pool. For that, it's as simple
as defining a node registry, creating a looper, creating a node, and running it.
See the example folder or the tutorial folder.

$ scripts/plenum

or supply a command to be executed first

$ scripts/plenum "new nodes all"

"""
import os
import sys
from collections import OrderedDict
from configparser import ConfigParser
from tempfile import TemporaryDirectory

from plenum.cli.cli import Cli
from plenum.common.looper import Looper
from plenum.common.util import getConfig


def run_cli():

    commands = sys.argv[1:]

    config = getConfig()
    nodeReg = config.nodeReg
    cliNodeReg = config.cliNodeReg
    basedirpath = config.baseDir

    with Looper(debug=False) as looper:
        cli = Cli(looper=looper,
                  basedirpath=basedirpath,
                  nodeReg=nodeReg,
                  cliNodeReg=cliNodeReg,
                  logFileName='log/cli.log')

        looper.run(cli.shell(*commands))


if __name__ == '__main__':
    run_cli()
